{"version":3,"sources":["Redux/stock/stock.selector.js","Redux/user/user.selectors.js","components/admin/Sidebar/sidebar.component.jsx","firebase/firebase.utils.js","Redux/stock/stock.types.js","Redux/stock/stock.actions.js","components/admin/Stock-tab/Stock.component.jsx","components/Stock-count/StockCount.components.jsx","components/admin/Category-List/CategoryList.component.jsx","Redux/products-page/products.selector.js","Redux/Category/category.selectors.js","Redux/newItem/new-item.types.js","Redux/newItem/new-item.selectors.js","components/admin/Edit-Item/EditItem.component.jsx","Redux/newItem/new-item.actions.js","components/admin/Create-Admin/CreateAdmin.component.jsx","Redux/Category/category.types.js","Redux/Category/category.actions.js","components/admin/Create-Category/CreateCategory.component.jsx","components/admin/Add-Item/AddItem.component.jsx","components/admin/Item/Item.component.jsx","Redux/products-page/products.types.js","Redux/products-page/products.actions.js","components/admin/Item-Page/ItemPage.component.jsx","components/admin/Admin-login/AdminLogin.component.jsx","components/admin/Admin-Nav/Admin-Nav.component.jsx","components/admin/admin-signIn-page/AdminSignInPage.component.jsx","components/admin/Admin-Dashboard/AdminDashboard.component.jsx","Redux/user/user.types.js","components/admin/Admin-home/AdminHome.component.jsx","Redux/user/user.actions.js","App.js","serviceWorker.js","Redux/user/user.reducer.js","Redux/Category/category.reducer.js","Redux/newItem/new-item.reducer.js","Redux/stock/stock.reducer.js","Redux/products-page/products.reducer.js","Redux/root-reducer.js","Redux/store.js","index.js"],"names":["selectStock","state","stock","selectStockSlice","createSelector","toggleSideBarSlice","burgerIsHidden","selectUserSlice","require","user","currentUser","Sidebar","this","props","sidebarHidden","sidebarStyle","border","window","innerWidth","transform","className","style","email","to","activeClassName","href","target","rel","React","Component","connect","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","firestore","googleProvider","GoogleAuthProvider","imageRef","storage","ref","child","stockActionTypes","getStockSuccess","type","payload","Stock","getStockCount","reduce","acc","value","count","dispatch","a","stockRef","collection","get","docs","forEach","doc","push","data","error","withRouter","history","textTransform","category","onClick","toLowerCase","CategoryList","stockCount","map","key","selectProducts","products","isGettingProducts","getProductsSlice","selectCategories","creatingCategorySlice","isCreating","selectCategoryErrMsgSlice","errMsg","categories","getCategoryErrorMsg","newItemActionTypes","isGettingCategory","selectAddNewItem","newItem","isAddingNewProduct","isAdding","isUpdating","clearForm","EditItem","productName","description","price","quantity","spec1","spec2","spec3","spec4","handleChange","event","name","setState","handleSubmit","preventDefault","id","match","params","updateProduct","clearInput","edit","filter","product","specifications","onSubmit","htmlFor","onChange","required","cols","rows","categoryList","categoryName","updating","display","alignItems","marginRight","disabled","color","height","width","timeout","newProduct","productRef","update","parseInt","swal","title","text","icon","button","asyncUpdateProduct","CreateAdmin","categoryActionTypes","getCategorySuccess","CreateCategory","createCategory","marginTop","add","set","asyncCreateCategory","AddItem","qty","img","console","log","uploadNewProducts","handleFileChange","files","getCategoryList","accept","categoryNames","categoryRef","put","getDownloadURL","downloadUrl","productsRef","imgUrl","FieldValue","increment","limitSentence","sentence","words","split","length","join","unitsSold","src","alt","productActionTypes","getProductsStart","productCategory","getProductSuccess","ItemPage","getProducts","queryRef","where","AdminLogin","_isMounted","password","loading","passwordError","emailError","signInWithEmailAndPassword","code","handleGoogleAuth","signInWithPopup","placeholder","AdminNav","SideBar","marginLeft","textDecoration","signOut","fontSize","cursor","AdminSignUpPage","exact","path","render","component","userActionTypes","AdminHome","onAuthStateChanged","setUser","App","Boolean","location","hostname","INIT_STATE","userReducer","action","errorMsg","categoryReducer","addingErrorMsg","updateErrorMsg","addNewItemReducer","isGettingStock","getStockErrorMsg","getProductsErrorMsg","productsReducer","persistConfig","whitelist","rootReducer","combineReducers","persistReducer","middlewares","logger","thunk","store","createStore","applyMiddleware","persistor","persistStore","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.25cdef37.chunk.js","sourcesContent":["import { createSelector } from 'reselect';\r\n\r\nconst selectStock = state => state.stock;\r\n\r\nexport const selectStockSlice = createSelector(\r\n    [selectStock],\r\n    stock => stock.stock\r\n);\r\n\r\nexport const toggleSideBarSlice = createSelector(\r\n    [selectStock],\r\n    stock => stock.burgerIsHidden\r\n);\r\n","const { createSelector } = require(\"reselect\");\r\n\r\nconst selectUser = state => state.user;\r\n\r\nexport const selectUserSlice = createSelector(\r\n    [selectUser],\r\n    user => user.currentUser\r\n);\r\n\r\n","import React from 'react';\r\n\r\nimport { AiOutlineDashboard, AiOutlineSwitcher, AiOutlineAppstoreAdd, AiOutlinePlusCircle } from 'react-icons/ai';\r\nimport { RiUserFollowLine } from 'react-icons/ri'\r\nimport { IoIosCreate } from 'react-icons/io';\r\n\r\nimport { NavLink } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { toggleSideBarSlice } from '../../../Redux/stock/stock.selector';\r\nimport { selectUserSlice } from '../../../Redux/user/user.selectors';\r\n\r\nclass Sidebar extends React.Component{\r\n    render(){\r\n        const { sidebarHidden, user } = this.props;\r\n        let sidebarStyle = {\r\n            border: '1px solid blue'\r\n        }\r\n        if (!sidebarHidden && window.innerWidth < 623) {\r\n            sidebarStyle = {\r\n                transform: 'translateX(1%)'\r\n            }\r\n        }\r\n        return(\r\n            <div className=\"sidebar\" style={sidebarStyle}>\r\n                <div className=\"sidebar__account\">\r\n                    <div className=\"sidebar__account--avatar\"> <RiUserFollowLine className=\"Sidebar__account--icon\"/> </div>\r\n                    <p className=\"sidebar__account--email\">{user.email}</p>\r\n                    <p className=\"sidebar__account--admin\">Admin</p>\r\n                </div>\r\n                <ul className=\"sidebar__links\">\r\n                    <NavLink to=\"/\" className=\"sidebar__link\" >\r\n                        <AiOutlineDashboard className=\"sidebar__link--icon\"/>\r\n                        <div className=\"sidebar__link--item\">Dashboard</div>\r\n                    </NavLink>\r\n                    <NavLink to=\"/add\" className=\"sidebar__link\" activeClassName=\"sidebar-active\">\r\n                        <AiOutlineAppstoreAdd className=\"sidebar__link--icon\"/>\r\n                        <div className=\"sidebar__link--item\">New Product</div>\r\n                    </NavLink>\r\n                    <NavLink to=\"/create-category\" className=\"sidebar__link\" activeClassName=\"sidebar-active\">\r\n                        <AiOutlinePlusCircle className=\"sidebar__link--icon\"/>\r\n                        <div className=\"sidebar__link--item\">New Category</div>\r\n                    </NavLink>\r\n                    <NavLink to=\"/Create-admin\" className=\"sidebar__link\"activeClassName=\"sidebar-active\">\r\n                        <IoIosCreate className=\"sidebar__link--icon\"/>\r\n                        <div className=\"sidebar__link--item\">Create Admin</div>\r\n                    </NavLink>\r\n                    <a href=\"https://github.com\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"sidebar__link\">\r\n                        <AiOutlineSwitcher className=\"sidebar__link--icon\"/>\r\n                        <div className=\"sidebar__link--item\">App</div>\r\n                    </a>\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    sidebarHidden: toggleSideBarSlice(state),\r\n    user: selectUserSlice(state)\r\n});\r\n\r\n\r\nexport default connect(mapStateToProps)(Sidebar);","import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\nimport 'firebase/storage';\r\n\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyDGVorq6WlOtUPx8Ew0hm08tYcm8gD_NPI\",\r\n    authDomain: \"e-commerce-oville.firebaseapp.com\",\r\n    databaseURL: \"https://e-commerce-oville.firebaseio.com\",\r\n    projectId: \"e-commerce-oville\",\r\n    storageBucket: \"e-commerce-oville.appspot.com\",\r\n    messagingSenderId: \"650465885299\",\r\n    appId: \"1:650465885299:web:561ce92c8ea44023ad3e06\",\r\n    measurementId: \"G-1FXMDP5XX7\"\r\n};\r\n\r\n//initialize App\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const auth = firebase.auth();\r\nexport const firestore = firebase.firestore();\r\nexport const googleProvider = new firebase.auth.GoogleAuthProvider();\r\n\r\n//storage reference\r\nconst storage = firebase.storage();\r\nconst storageRef = storage.ref();\r\n\r\n//image ref\r\nexport const imageRef = storageRef.child('images');\r\n\r\nexport default firebase;","export const stockActionTypes = {\r\n    GET_STOCK_START: 'GET_STOCK_START',\r\n    GET_STOCK_SUCCESS: 'GET_STOCK_SUCCESS',\r\n    GET_STOCK_FAILURE: 'GET_STOCK_FAILURE',\r\n    TOGGLE_HIDDEN: 'TOGGLE_HIDDEN'\r\n}","import { firestore } from '../../firebase/firebase.utils';\r\nimport { stockActionTypes } from './stock.types';\r\n\r\nconst getStockStart = () => ({\r\n    type: stockActionTypes.GET_STOCK_START\r\n});\r\n\r\nconst getStockSuccess = (stock) => ({\r\n    type: stockActionTypes.GET_STOCK_SUCCESS,\r\n    payload: stock\r\n});\r\n\r\nconst getStockFailure = (error) => ({\r\n    type: stockActionTypes.GET_STOCK_FAILURE,\r\n    payload: error\r\n});\r\n\r\nexport const toggleSideBar = () => ({\r\n    type: stockActionTypes.TOGGLE_HIDDEN\r\n})\r\n\r\nexport const asyncGetStockCount = () => {\r\n    return async dispatch => {\r\n        try {\r\n            \r\n            //get stock count from firebase\r\n            dispatch(getStockStart());\r\n            const stock = [];\r\n            const stockRef = firestore.collection('stock_count');\r\n            const stockCount = await stockRef.get();\r\n            stockCount.docs.forEach(doc => {\r\n                stock.push(doc.data());\r\n            })\r\n            dispatch(getStockSuccess(stock));\r\n        } catch (error) {\r\n            dispatch(getStockFailure(error));\r\n        }\r\n    }\r\n}","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { selectStockSlice } from '../../../Redux/stock/stock.selector';\r\nimport { asyncGetStockCount } from '../../../Redux/stock/stock.actions';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nclass Stock extends React.Component {\r\n    \r\n    //get stock count\r\n    async componentDidMount(){\r\n         await this.props.getStockCount();\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div className=\"stock\">\r\n                <div className=\"stock__count\">\r\n                    <span className=\"stock__count--number\">\r\n                        {/* //calculate sum of all stock */}\r\n                        {\r\n                            this.props.stock ? \r\n                            this.props.stock.reduce((acc, value) => {\r\n                                    return acc + value.count\r\n                                }, 0)\r\n                            : '...'\r\n                        }\r\n                    </span>\r\n                    <span className=\"stock__count--text\">Items Available</span>\r\n                </div>\r\n                <div className=\"stock__xx\">\r\n                    <h2 className=\"stock__heading\"> Stock</h2>\r\n                    <Link to=\"/add\" className=\"stock__action\">Add New Item</Link>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    getStockCount: () => dispatch(asyncGetStockCount())\r\n});\r\n\r\nconst mapStateToProps = state => ({\r\n    stock: selectStockSlice(state)\r\n})\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Stock);","import React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nconst StockRow = ({stock, history}) => (\r\n    <tr className=\"table-row\">\r\n        <td style={{textTransform: 'capitalize'}}>{stock.category}</td>\r\n        <td>{stock.count}</td>\r\n        <td>\r\n            <button onClick={() => history.push(`/product/${stock.category.toLowerCase()}`)}>View</button>\r\n        </td>\r\n    </tr>\r\n);\r\n\r\nexport default withRouter(StockRow);","import React from 'react';\r\nimport { selectStockSlice } from '../../../Redux/stock/stock.selector';\r\nimport { AiOutlineUnorderedList } from 'react-icons/ai';\r\nimport { connect } from 'react-redux';\r\nimport StockRow from '../../Stock-count/StockCount.components';\r\n\r\n\r\nclass CategoryList extends React.Component {\r\n    render(){\r\n        const { stockCount } = this.props;\r\n        return(\r\n            <div className=\"category-list\">\r\n                <h4 className=\"category-list__heading\"> \r\n                    <AiOutlineUnorderedList className=\"category-list__heading--icon\"/> \r\n                    <span>Categories</span> \r\n                </h4>\r\n                <table className=\"category-list__table\">\r\n                    <tr>\r\n                        <th>Category</th>\r\n                        <th>Item Count</th>\r\n                    </tr>\r\n                    {\r\n                    // get stock count for all stock items\r\n                    stockCount ?\r\n                            stockCount.map(stock => <StockRow stock={stock} key={stock.category}/>)\r\n                        : \r\n                            'loading'\r\n                    } \r\n                    \r\n                </table>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    stockCount: selectStockSlice(state)\r\n})\r\n\r\nexport default connect(mapStateToProps, null)(CategoryList);","import { createSelector } from 'reselect';\r\n\r\nconst selectProducts = state => state.products;\r\n\r\nexport const isGettingProducts = createSelector(\r\n    [selectProducts],\r\n    products => products.isGettingProducts\r\n);\r\n\r\nexport const getProductsSlice = createSelector(\r\n    [selectProducts],\r\n    products => products.products\r\n);\r\n\r\n\r\n","import { createSelector } from 'reselect';\r\n\r\nconst selectCategories = state => state.category;\r\n\r\nexport const creatingCategorySlice = createSelector(\r\n    [selectCategories],\r\n    category => category.isCreating\r\n);\r\n\r\nexport const selectCategoryErrMsgSlice = createSelector(\r\n    [selectCategories],\r\n    category => category.errMsg\r\n);\r\n\r\nexport const getCategoryErrorMsg = createSelector(\r\n    [selectCategories],\r\n    category => category.getCategoryErrorMsg\r\n);\r\n\r\nexport const categories = createSelector(\r\n    [selectCategories],\r\n    category => category.categories\r\n);\r\n\r\nexport const isGettingCategorySlice  = createSelector(\r\n    [selectCategories],\r\n    category => category.isGettingCategory\r\n);","export const newItemActionTypes = {\r\n    ADD_NEW_ITEM_START: 'ADD_NEW_ITEM_START',\r\n    ADD_NEW_ITEM_SUCCESS: 'ADD_NEW_ITEM_SUCCESS',\r\n    ADD_NEW_ITEM_FAILURE: 'ADD_NEW_ITEM_FAILURE',\r\n    UPDATE_ITEM_START: 'UPDATE_ITEM_START',\r\n    UPDATE_ITEM_SUCCESS: 'UPDATE_ITEM_SUCCESS',\r\n    UPDATE_ITEM_FAILURE: 'UPDATE_ITEM_FAILURE'\r\n}","import { createSelector } from 'reselect';\r\n\r\nconst selectAddNewItem = state => state.newItem;\r\n\r\nexport const isAddingNewProduct = createSelector(\r\n    [selectAddNewItem],\r\n    newItem => newItem.isAdding\r\n);\r\n\r\nexport const isUpdating = createSelector(\r\n    [selectAddNewItem],\r\n    newItem => newItem.isUpdating\r\n);\r\n\r\nexport const clearForm = createSelector(\r\n    [selectAddNewItem],\r\n    newItem => newItem.clearForm\r\n);","import React from 'react';\r\n// import { GoDiffAdded } from 'react-icons/go';\r\nimport { FiEdit } from 'react-icons/fi';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { getProductsSlice } from '../../../Redux/products-page/products.selector';\r\nimport { categories } from '../../../Redux/Category/category.selectors';\r\nimport { asyncUpdateProduct } from '../../../Redux/newItem/new-item.actions';\r\nimport { clearForm, isUpdating } from './../../../Redux/newItem/new-item.selectors';\r\nimport Loader from 'react-loader-spinner';\r\n\r\n\r\n\r\nclass EditItem extends React.Component {\r\n    //init empty state\r\n    state = {\r\n        productName: '',\r\n        description: '',\r\n        category: '',\r\n        price: null,\r\n        quantity: null,\r\n        spec1: '',\r\n        spec2: '',\r\n        spec3: '',\r\n        spec4: ''\r\n    }\r\n    \r\n    componentDidMount() {\r\n        //get id of current product\r\n        const { match: { params: {id} }, products } = this.props;\r\n\r\n        //search redux store for the product to be edited\r\n        const edit = products.filter(product => product.id === id);\r\n        const { productName, description, category, price, quantity } = edit[0].data;\r\n        \r\n        this.setState({ productName, description, category, price, quantity, spec1: edit[0].data.specifications[0],\r\n                        spec2: edit[0].data.specifications[1], spec3: edit[0].data.specifications[2], spec4: edit[0].data.specifications[3]})\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        const { name, value } = event.target;\r\n        this.setState({ [name]: value});\r\n    }\r\n\r\n    handleSubmit = async event => {\r\n        event.preventDefault();\r\n        const { match: { params: {id} }, updateProduct, clearInput } = this.props;\r\n        await updateProduct(this.state, id);\r\n        if (clearInput) {\r\n            this.setState({\r\n                productName: '',\r\n                description: '',\r\n                price: '',\r\n                quantity: '',\r\n                spec1: '',\r\n                spec2: '',\r\n                spec3: '',\r\n                spec4: ''\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { productName, description, category, price, quantity, spec1, spec2, spec3, spec4 } = this.state;\r\n        return(\r\n            <div className=\"add-item\">\r\n                <h2 className=\"add-item__heading\">\r\n                    <FiEdit/>\r\n                    <span>Edit Item</span>    \r\n                </h2>\r\n                <form className=\"add-item__form\" onSubmit={this.handleSubmit}>\r\n                    <div className=\"add-item__form--group\">\r\n                        <label htmlFor=\"name\" className=\"add-item__label\">Product Name:</label>\r\n                        <input value={productName} onChange={this.handleChange}\r\n                            type=\"text\" name=\"productName\" id=\"productName\" \r\n                            required className=\"add-item__input add-item__input--name\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"add-item__form--group add-item__description\">\r\n                        <label htmlFor=\"description\" className=\"add-item__label\">Description:</label>\r\n                        <textarea value = {description} onChange={this.handleChange}\r\n                            name=\"description\" id=\"description\" cols=\"36\" rows=\"6\" \r\n                            required className=\"add-item__input add-item__input--textarea\">\r\n                        </textarea>\r\n                    </div>\r\n                    <div className=\"add-item__form--group add-item__category\">\r\n                        <label htmlFor=\"category\" className=\"add-item__label\">Category:</label>\r\n                        <select value={category} onChange={this.handleChange} id=\"category\" name=\"category\"\r\n                            className=\"add-item__input add-item__input--category\">\r\n                            {\r\n                                this.props.categoryList.map( category => \r\n                                    <option key={category.categoryName} value={category.categoryName}>{category.categoryName}</option>    \r\n                                )\r\n                            }\r\n                        </select>\r\n                    </div>\r\n                    <div className=\"add-item__form--number\">\r\n                        <div className=\"add-item__form--group\">\r\n                            <label htmlFor=\"Price\" className=\"add-item__label\">Price(&#8358;):</label>\r\n                            <input  value={price} onChange={this.handleChange}\r\n                                type=\"number\" name=\"price\" id=\"price\" required className=\"add-item__input add-item__input--price\"\r\n                            />\r\n                        </div>\r\n                        <div className=\"add-item__form--group\">\r\n                            <label htmlFor=\"Price\" className=\"add-item__label\">Quantity:</label>\r\n                            <input value={quantity} onChange={this.handleChange}\r\n                                type=\"number\" name=\"quantity\" id=\"quantity\" required className=\"add-item__input add-item__input--qty\"\r\n                            />\r\n                        </div>\r\n                    </div>\r\n        \r\n                    {/* <div className=\"add-item__form--group\">\r\n                        <label htmlFor=\"image\" className=\"add-item__label\">Select Image:</label>\r\n                        <input type=\"file\" className=\"add-item__input--file\" style={{color: \"red\"}}/>\r\n                    </div> */}\r\n                    <div className=\"add-item__spec\">\r\n                        <h5 className=\"add-item__spec--heading\">Add Specification</h5>\r\n                        <div className=\"add-item__spec--group\">\r\n                            <label htmlFor=\"spec1\" className=\"add-item__label\">1: </label>\r\n                            <input value={spec1} onChange={this.handleChange} type=\"text\" name=\"spec1\" id=\"spec1\" className=\"add-item__input\"/>\r\n                        </div>\r\n                        <div className=\"add-item__spec--group\">\r\n                            <label htmlFor=\"spec2\" className=\"add-item__label\">2: </label>\r\n                            <input value={spec2} onChange={this.handleChange} type=\"text\" name=\"spec2\" id=\"spec2\" className=\"add-item__input\"/>\r\n                        </div>\r\n                        <div className=\"add-item__spec--group\">\r\n                            <label htmlFor=\"spec3\" className=\"add-item__label\">3: </label>\r\n                            <input value={spec3} onChange={this.handleChange} type=\"text\" name=\"spec3\" id=\"spec3\" className=\"add-item__input\"/>\r\n                        </div>\r\n                        <div className=\"add-item__spec--group\">\r\n                            <label htmlFor=\"spec4\" className=\"add-item__label\">3: </label>\r\n                            <input value={spec4} onChange={this.handleChange} type=\"text\" name=\"spec4\" id=\"spec4\" className=\"add-item__input\"/>\r\n                        </div>\r\n                    </div>\r\n                    {\r\n                        this.props.updating ?\r\n                            <div style={{display: 'flex', alignItems: 'center'}}>\r\n                                <input type=\"submit\" value=\"Updating\" className=\"add-item__upload\" style={{marginRight: '1.5rem'}} disabled/>\r\n                                <Loader\r\n                                    type=\"Oval\"\r\n                                    color=\"#006400\"\r\n                                    height={50}\r\n                                    width={50}\r\n                                    timeout={0}                \r\n                                />\r\n                            </div>\r\n                        :\r\n                            <input type=\"submit\" value=\"Update\" className=\"add-item__upload\" style={{marginRight: '1.5rem'}}/>\r\n                    }\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    products: getProductsSlice(state),\r\n    categoryList: categories(state),\r\n    clearInput: clearForm(state),\r\n    updating: isUpdating(state)\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    updateProduct: (newProduct, id) => dispatch(asyncUpdateProduct(newProduct, id))\r\n})\r\n\r\nexport default withRouter(\r\n    connect(mapStateToProps, mapDispatchToProps)\r\n    (EditItem)\r\n);","import { newItemActionTypes } from './new-item.types';  \r\n\r\n//firebase image reference\r\nimport { imageRef } from '../../firebase/firebase.utils';   \r\nimport { firestore } from '../../firebase/firebase.utils';\r\nimport swal from 'sweetalert';\r\nimport  firebase  from 'firebase/app';\r\n\r\nconst addNewItemStart = () => ({\r\n    type: newItemActionTypes.ADD_NEW_ITEM_START\r\n});\r\n\r\nconst addNewItemSuccess = () => ({\r\n    type: newItemActionTypes.ADD_NEW_ITEM_SUCCESS\r\n});\r\n\r\nconst addNewItemFailure = (error) => ({\r\n    type: newItemActionTypes.ADD_NEW_ITEM_FAILURE,\r\n    payload: error\r\n});\r\n\r\nexport const asyncUpLoadNewProducts = (newProduct) => {\r\n    return async dispatch => {\r\n        try {\r\n            dispatch(addNewItemStart());\r\n\r\n            //add image to firebase storage\r\n            await imageRef.child(newProduct.img.name).put(newProduct.img);\r\n            \r\n            //get download url of the image\r\n            const downloadUrl = await imageRef.child(newProduct.img.name).getDownloadURL();\r\n            const productsRef = firestore.collection('products');\r\n\r\n            //add new product to firebase database\r\n            await productsRef.add({\r\n                productName: newProduct.productName,\r\n                description: newProduct.description,\r\n                category: newProduct.category,\r\n                price: parseInt(newProduct.price),\r\n                quantity: parseInt(newProduct.qty),\r\n                imgUrl: downloadUrl,\r\n                specifications: [newProduct.spec1, newProduct.spec2, newProduct.spec3, newProduct.spec4]\r\n            });\r\n\r\n            //update stock count\r\n            const categoryRef = firestore.collection('stock_count').doc(newProduct.category);\r\n            await categoryRef.update({count: firebase.firestore.FieldValue.increment(parseInt(newProduct.qty))});\r\n\r\n            dispatch(addNewItemSuccess());\r\n\r\n            //sweet alert success modal\r\n            swal({\r\n                title: \"Done\",\r\n                text: \"Uploaded new Products!\",\r\n                icon: \"success\",\r\n                button: \"ok!\",\r\n            });\r\n        } catch (error) {\r\n            dispatch(addNewItemFailure(error));\r\n\r\n            //sweet alert error modal\r\n            swal({\r\n                title: \"oops! An Error occurred\",\r\n                text: \"Try Again\",\r\n                icon: \"warning\",\r\n                button: \"ok\",\r\n            }); \r\n        }\r\n    }\r\n}\r\n\r\nconst updateProductStart = () => ({\r\n    type: newItemActionTypes.UPDATE_ITEM_START\r\n});\r\n\r\nconst updateProductSuccess = () => ({\r\n    type: newItemActionTypes.UPDATE_ITEM_SUCCESS\r\n});\r\n\r\nconst updateProductFailure = (error) => ({\r\n    type: newItemActionTypes.UPDATE_ITEM_FAILURE,\r\n    payload: error\r\n});\r\n\r\nexport const asyncUpdateProduct = (newProduct, id) => {\r\n    return async dispatch => {\r\n        try {\r\n            dispatch(updateProductStart());\r\n\r\n            const productRef = firestore.collection('products').doc(id);\r\n            await productRef.update({\r\n                productName: newProduct.productName,\r\n                description: newProduct.description,\r\n                category: newProduct.category,\r\n                price: parseInt(newProduct.price),\r\n                quantity: parseInt(newProduct.quantity),\r\n                specifications: [newProduct.spec1, newProduct.spec2, newProduct.spec3, newProduct.spec4]\r\n            });\r\n            dispatch(updateProductSuccess());\r\n            swal({\r\n                title: \"Done\",\r\n                text: \"Update Successful\",\r\n                icon: \"success\",\r\n                button: \"ok!\",\r\n            });\r\n        } catch (error) {\r\n            dispatch(updateProductFailure(error));\r\n            swal({\r\n                title: \"oops! An Error occurred\",\r\n                text: \"Try Again\",\r\n                icon: \"warning\",\r\n                button: \"ok\",\r\n            }); \r\n        }\r\n    }\r\n}","import React from 'react';\r\nimport { IoIosCreate } from \"react-icons/io\";\r\n\r\n\r\nconst CreateAdmin = () => (\r\n    <div className=\"create-admin\">\r\n        <h1 className=\"create-admin__heading\">\r\n            <IoIosCreate/>\r\n            <span>Create Admin</span>\r\n        </h1>\r\n        <div className=\"create-admin__form-group\">\r\n            <label htmlFor=\"email\" className=\"create-admin__label\">Email:</label>\r\n            <input type=\"email\" name=\"email\" id=\"email\" className=\"create-admin__input\"/>\r\n        </div>\r\n        <input type=\"submit\" value=\"Create\" className=\"create-admin__submit\"/>\r\n    </div>\r\n);\r\n\r\nexport default CreateAdmin;","export const categoryActionTypes = {\r\n    ADD_CATEGORY_START: 'ADD_CATEGORY_START',\r\n    ADD_CATEGORY_SUCCESS: 'ADD_CATEGORY_SUCCESS',\r\n    ADD_CATEGORY_FAILURE: 'ADD_CATEGORY_FAILURE',\r\n    GET_CATEGORY_START: 'GET_CATEGORY_START',\r\n    GET_CATEGORY_SUCCESS: 'GET_CATEGORY_SUCCESS',\r\n    GET_CATEGORY_FAILURE: 'GET_CATEGORY_FAILURE'\r\n}","import { categoryActionTypes } from './category.types';\r\nimport { firestore } from '../../firebase/firebase.utils';\r\nimport swal from 'sweetalert';\r\n\r\nconst createCategoryStart = () => ({\r\n    type: categoryActionTypes.ADD_CATEGORY_START\r\n});\r\n\r\nconst categorySuccess = () => ({\r\n    type: categoryActionTypes.ADD_CATEGORY_SUCCESS\r\n});\r\n\r\nconst createCategoryFailure = () => ({\r\n    type: categoryActionTypes.ADD_CATEGORY_FAILURE\r\n});\r\n\r\nconst getCategoryStart = () => ({\r\n    type: categoryActionTypes.GET_CATEGORY_START\r\n});\r\n\r\nconst getCategorySuccess = (categories) => ({\r\n    type: categoryActionTypes.GET_CATEGORY_SUCCESS,\r\n    payload: categories\r\n});\r\n\r\nconst getCategoryFailure = (error) => ({\r\n    type: categoryActionTypes.GET_CATEGORY_FAILURE,\r\n    payload: error\r\n});\r\n\r\nexport const asyncCreateCategory = (category) => {\r\n    return async dispatch => {\r\n        try {\r\n            dispatch(createCategoryStart());\r\n\r\n            //create new category on firebase\r\n            await firestore.collection('categories').add({\r\n                categoryName: category.toLowerCase(),\r\n            });\r\n\r\n            //initialize the stock count of the new category to 0\r\n            await firestore.collection('stock_count').doc(category).set({count: 0, category: category.toLowerCase()});\r\n\r\n            dispatch(categorySuccess());\r\n            swal({\r\n                title: \"Done\",\r\n                text: \"Created new category\",\r\n                icon: \"success\",\r\n                button: \"ok!\",\r\n            });\r\n        } catch (error) {\r\n            dispatch(createCategoryFailure(error));\r\n        }\r\n    };\r\n}\r\n\r\nexport const asyncGetCategory = () => {\r\n    return async dispatch => {\r\n        try {\r\n            //get category list and dispatch\r\n            let categoryNames = []\r\n            dispatch(getCategoryStart());\r\n            const categoryRef = firestore.collection('categories');\r\n            const categories = await categoryRef.get();\r\n            categories.docs.forEach(doc => {\r\n                categoryNames.push(doc.data());\r\n            });\r\n            dispatch(getCategorySuccess(categoryNames));\r\n        } catch (error) {\r\n            console.log(error);\r\n            dispatch(getCategoryFailure(error));\r\n        }\r\n    }\r\n}","import React from 'react';\r\nimport { IoIosCreate } from \"react-icons/io\";\r\nimport { connect } from 'react-redux';\r\nimport { creatingCategorySlice } from '../../../Redux/Category/category.selectors';\r\nimport { selectCategoryErrMsgSlice } from '../../../Redux/Category/category.selectors';\r\nimport { asyncCreateCategory } from '../../../Redux/Category/category.actions';\r\nimport Loader from 'react-loader-spinner';\r\n\r\n\r\n\r\n\r\nclass CreateCategory extends React.Component {\r\n    state = {\r\n        category: ''\r\n    }\r\n\r\n    handleChange = event => {\r\n        const { value, name } = event.target;\r\n        this.setState({ [name]: value });\r\n    };\r\n\r\n    handleSubmit = event => {\r\n        event.preventDefault();\r\n\r\n        //dispatch create category from redux and reset form\r\n        this.props.createCategory(this.state.category);\r\n        this.setState({category: ''})\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"create-admin\">\r\n                <h1 className=\"create-admin__heading\">\r\n                    <IoIosCreate/>\r\n                    <span>Create Category</span>\r\n                </h1>\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <div className=\"create-admin__form-group\">\r\n                        <label htmlFor=\"category\" className=\"create-admin__label\">Category:</label>\r\n                        <input \r\n                            onChange={this.handleChange}\r\n                            type=\"text\" name=\"category\" id=\"category\" className=\"create-admin__input\" required value={this.state.category}/>\r\n                    </div>\r\n                    <div style={{display: \"flex\"}}>\r\n                        <input type=\"submit\" value=\"Create\" className=\"create-admin__submit\" style={{marginRight: \"1rem\"}}/>\r\n                        {\r\n                            this.props.isCreating ? \r\n                                <Loader\r\n                                    style={{marginTop: '.5rem'}}\r\n                                    type=\"Puff\"\r\n                                    color=\"#FF0000\"\r\n                                    height={20}\r\n                                    width={20}\r\n                                    timeout={0}\r\n                                /> :\r\n                                ''\r\n                        }\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    isCreating: creatingCategorySlice(state),\r\n    errMsg: selectCategoryErrMsgSlice(state)\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    createCategory: category => dispatch(asyncCreateCategory(category))\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateCategory);","import React from 'react';\r\nimport { RiMenuAddLine } from 'react-icons/ri';\r\nimport { connect } from 'react-redux';\r\nimport { categories } from '../../../Redux/Category/category.selectors';\r\nimport { asyncGetCategory } from '../../../Redux/Category/category.actions';\r\nimport { isAddingNewProduct } from '../../../Redux/newItem/new-item.selectors';\r\nimport { asyncUpLoadNewProducts } from '../../../Redux/newItem/new-item.actions';\r\nimport Loader from 'react-loader-spinner';\r\n\r\n\r\n\r\nclass AddItem extends React.Component{\r\n    state = {\r\n        productName: '',\r\n        description: '',\r\n        category: '',\r\n        price: '',\r\n        qty: '',\r\n        img: null,\r\n        categoryList: null,\r\n        spec1: '',\r\n        spec2: '',\r\n        spec3: '',\r\n        spec4: ''\r\n    }\r\n\r\n    async componentDidMount(){\r\n        //get category list from firestore \r\n      await this.props.getCategoryList();\r\n      this.setState({\r\n          ...this.state,\r\n          categoryList: this.props.categories\r\n      })\r\n    }\r\n\r\n    handleChange = event => {\r\n        const { value, name } = event.target;\r\n        this.setState({[name]: value})\r\n    }\r\n\r\n    handleSubmit = async event => {\r\n        // dispatch upload new products from redux and reset form to init state\r\n        event.preventDefault();\r\n        console.log(this.state)\r\n        this.props.uploadNewProducts(this.state);\r\n        this.setState({\r\n            ...this.state,\r\n            productName: '',\r\n            description: '',\r\n            category: '',\r\n            price: '',\r\n            qty: '',\r\n            spec1: '',\r\n            spec2: '',\r\n            spec3: '',\r\n            spec4: ''\r\n        });\r\n    }\r\n\r\n    handleFileChange = event => {\r\n        this.setState({...this.state, img: event.target.files[0]})\r\n    }\r\n\r\n    render(){\r\n        const { productName, description, category, price, qty, spec1, spec2, spec3, spec4 } = this.state;\r\n        return (\r\n        <div className=\"add-item\">\r\n            <h2 className=\"add-item__heading\">\r\n                <RiMenuAddLine/>\r\n                <span>Add New Item(s)</span>    \r\n            </h2>\r\n            <form className=\"add-item__form\" onSubmit={this.handleSubmit}>\r\n                <div className=\"add-item__form--group\">\r\n                    <label htmlFor=\"name\" className=\"add-item__label\">Product Name:</label>\r\n                    <input value={productName} onChange={this.handleChange}\r\n                        type=\"text\" name=\"productName\" id=\"name\" required className=\"add-item__input add-item__input--name\"\r\n                    />\r\n                </div>\r\n                <div className=\"add-item__form--group add-item__description\">\r\n                    <label htmlFor=\"description\" className=\"add-item__label\">Description:</label>\r\n                    <textarea value={description} onChange={this.handleChange}\r\n                        name=\"description\" id=\"description\" cols=\"36\" rows=\"3\" required \r\n                        className=\"add-item__input add-item__input--textarea\">\r\n                    </textarea>\r\n                </div>\r\n                <div className=\"add-item__form--group add-item__category\">\r\n                    <label htmlFor=\"category\" className=\"add-item__label\">Category:</label>\r\n                    <select value={category} onChange={this.handleChange}\r\n                        id=\"category\" name=\"category\" className=\"add-item__input add-item__input--category\">\r\n                        <option >Select Category</option>\r\n                        {\r\n                            this.state.categoryList ? \r\n                                this.state.categoryList.map(category => \r\n                                    <option key={category.categoryName} value={category.categoryName}>{category.categoryName}</option>                                    \r\n                                )\r\n                            : \r\n                            <option value=\"Computer\">Loading...</option> \r\n                        }\r\n                    </select>\r\n                </div>\r\n                <div className=\"add-item__form--number\">\r\n                    <div className=\"add-item__form--group\">\r\n                        <label htmlFor=\"Price\" className=\"add-item__label\">Price(&#8358;):</label>\r\n                        <input value={price} onChange={this.handleChange}\r\n                            type=\"number\" name=\"price\" id=\"price\" required className=\"add-item__input add-item__input--price\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"add-item__form--group\">\r\n                        <label htmlFor=\"qty\" className=\"add-item__label\">Quantity:</label>\r\n                        <input value={qty} onChange={this.handleChange}\r\n                            type=\"number\" name=\"qty\" id=\"qty\" required className=\"add-item__input add-item__input--qty\"\r\n                        />\r\n                    </div>\r\n                </div>\r\n    \r\n                <div className=\"add-item__form--group\">\r\n                    <label htmlFor=\"image\" className=\"add-item__label\">Select Image:</label>\r\n                    <input onChange={this.handleFileChange} \r\n                        type=\"file\" className=\"add-item__input--file\" style={{color: \"red\"}} required\r\n                        accept=\"image/png, image/jpeg, image/jpg, image/webp\"\r\n                    />\r\n                </div>\r\n                <div className=\"add-item__spec\">\r\n                    <h5 className=\"add-item__spec--heading\">Add Specification</h5>\r\n                    <div className=\"add-item__spec--group\">\r\n                        <label htmlFor=\"spec1\" className=\"add-item__label\">1: </label>\r\n                        <input value={spec1} onChange={this.handleChange}\r\n                            type=\"text\" name=\"spec1\" id=\"spec1\" className=\"add-item__input\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"add-item__spec--group\">\r\n                        <label htmlFor=\"spec2\" className=\"add-item__label\">2: </label>\r\n                        <input value={spec2} onChange={this.handleChange}\r\n                            type=\"text\" name=\"spec2\" id=\"spec2\" className=\"add-item__input\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"add-item__spec--group\">\r\n                        <label htmlFor=\"spec3\" className=\"add-item__label\">3: </label>\r\n                        <input value={spec3} onChange={this.handleChange}\r\n                            type=\"text\" name=\"spec3\" id=\"spec3\" className=\"add-item__input\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"add-item__spec--group\">\r\n                        <label htmlFor=\"spec4\" className=\"add-item__label\">4: </label>\r\n                        <input  value={spec4} onChange={this.handleChange}\r\n                            type=\"text\" name=\"spec4\" id=\"spec4\" className=\"add-item__input\"\r\n                        />\r\n                    </div>\r\n                </div>\r\n\r\n                {\r\n                    this.props.isAddingNewProduct ? \r\n                        <div style={{marginTop: \"2rem\", display: \"flex\", alignItems: 'center'}}>\r\n                            <input style={{marginRight: '2rem'}} value=\"Uploading\" className=\"add-item__upload\"/>\r\n                            <Loader\r\n                                    type=\"Oval\"\r\n                                    color=\"#006400\"\r\n                                    height={50}\r\n                                    width={50}\r\n                                    timeout={0}                \r\n                                />\r\n                        </div> :\r\n                        <div style={{marginTop: \"2rem\", display: \"flex\", alignItems: 'center'}}>\r\n                            <input style={{marginRight: '2rem'}} type=\"submit\" value=\"Upload\" className=\"add-item__upload\"/>\r\n                        </div>\r\n                }\r\n            </form>\r\n        </div>\r\n        );\r\n    }\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    categories: categories(state),\r\n    isAddingNewProduct: isAddingNewProduct(state)\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    getCategoryList: () => dispatch(asyncGetCategory()),\r\n    uploadNewProducts: (products) => dispatch(asyncUpLoadNewProducts(products))\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AddItem);","import React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nconst Item = ({data: { description, imgUrl, price, productName, quantity, unitsSold }, id, history}) => (\r\n    <div className=\"item\">\r\n        <div className=\"item__content\">\r\n            <figure className=\"item__img\">\r\n                <img src={`${imgUrl}`} alt=\"\"/>\r\n            </figure>\r\n            <div className=\"item__details\">\r\n                <div className=\"item__spec\">\r\n                    <div className=\"item__detail \"> \r\n                        <p className=\"item__detail--name\">Name:</p>  \r\n                        <span>{productName}</span>\r\n                    </div>\r\n                \r\n                    <div className=\"item__detail\"> \r\n                        <p className=\"item__detail--description\">Description:</p>  \r\n                        <span>{limitSentence(description)}</span>\r\n                    </div>\r\n                    <div className=\"item__detail\"> \r\n                        <p className=\"item__detail--unit\">\r\n                            Units Sold\r\n                        </p>  \r\n                        <span>{ unitsSold ? unitsSold : 0 }</span>\r\n                    </div>\r\n                </div>\r\n                <div className=\"\">\r\n                    <div className=\"item__detail\"> \r\n                        <p className=\"item__detail--price\">Price:</p>  \r\n                        <span>&#8358; {price}</span>\r\n                    </div>\r\n                    <div className=\"item__detail\"> \r\n                        <p className=\"item__detail--qty\">Qty:</p>  \r\n                        <span>{ quantity }</span>\r\n                    </div>\r\n                    <button onClick={ () => history.push(`/edit/${id}`)}\r\n                        className=\"item__btn\">\r\n                        Edit\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n);\r\n\r\n\r\nconst limitSentence = (sentence) => {\r\n    const words = sentence.split(\" \");\r\n\r\n    if(words.length > 20 )\r\n        return `${words.join(\" \")}...`;\r\n    return sentence;\r\n}\r\n\r\nexport default withRouter(Item);\r\n","export const productActionTypes = {\r\n    GET_PRODUCT_START: 'GET_PRODUCT_START',\r\n    GET_PRODUCT_SUCCESS: 'GET_PRODUCT_SUCCESS',\r\n    GET_PRODUCT_FAILURE: 'GET_PRODUCT_FAILURE'\r\n}","import { productActionTypes } from './products.types';\r\nimport { firestore } from '../../firebase/firebase.utils';\r\n\r\nconst getProductsStart = (productCategory) => ({\r\n    type: productActionTypes.GET_PRODUCT_START,\r\n    payload: productCategory\r\n});\r\n\r\nconst getProductSuccess = (products) => ({\r\n    type: productActionTypes.GET_PRODUCT_SUCCESS,\r\n    payload: products\r\n});\r\n\r\nconst getProductsFailure = (error) => ({\r\n    type: productActionTypes.GET_PRODUCT_FAILURE,\r\n    payload: error\r\n});\r\n\r\nexport const asyncGetProducts = (productCategory) => {\r\n    return async dispatch => {\r\n        try {\r\n            dispatch(getProductsStart(productCategory));\r\n\r\n            //query ref to query firestore\r\n            const queryRef = firestore.collection('products').where('category', '==', productCategory);\r\n\r\n            const products = []; //empty array that will hold all docs            \r\n            const getProducts = await queryRef.get();   //get docs from firestore\r\n            \r\n            //store docs in the products array\r\n            getProducts.docs.forEach(doc => {\r\n                products.push({id: doc.id, data: doc.data()});\r\n            });\r\n            \r\n            //dispatch to props\r\n            dispatch(getProductSuccess(products))\r\n        } catch (error) {\r\n            dispatch(getProductsFailure(productCategory));\r\n        }\r\n    }\r\n}\r\n","import React, { Component} from 'react';\r\nimport Item from './../Item/Item.component';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { asyncGetProducts } from './../../../Redux/products-page/products.actions';\r\nimport { isGettingProducts, getProductsSlice } from './../../../Redux/products-page/products.selector';\r\n\r\nclass ItemPage extends Component {\r\n    componentDidMount(){\r\n        const { match: { params: {id} }, getProducts } = this.props;\r\n        getProducts(id);\r\n    }\r\n    render() {\r\n        const { match: { params: {id} }, products} = this.props;\r\n        console.log(products);\r\n        return(\r\n            <div className=\"item-page\">\r\n                <h1 className=\"item-page--heading\">Showing Results for {id}</h1>\r\n                {\r\n                    products ? \r\n                        products.map(product => <Item key={product.id} id={product.id} data={product.data}/>)\r\n                    :\r\n                        \"loading\"\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    products: getProductsSlice(state),\r\n    isGettingProducts: isGettingProducts(state)\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    getProducts: (category) => dispatch(asyncGetProducts(category))\r\n});\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(ItemPage));","//react\r\nimport React from 'react';\r\n\r\n//firebase\r\nimport { auth } from '../../../firebase/firebase.utils';\r\nimport { googleProvider } from './../../../firebase/firebase.utils';\r\n\r\n//icons\r\nimport { AiOutlineMail } from 'react-icons/ai';\r\nimport { RiLockPasswordLine } from 'react-icons/ri';\r\nimport { IoIosLogIn } from 'react-icons/io';\r\nimport { FcGoogle } from 'react-icons/fc';\r\nimport Loader from 'react-loader-spinner';\r\n\r\n//modal\r\nimport swal from 'sweetalert';\r\n\r\n\r\n\r\nclass AdminLogin extends React.Component{\r\n\r\n    _isMounted = false;\r\n\r\n    state = {\r\n        email: '',\r\n        password: '',\r\n        loading: false,\r\n        passwordError: '',\r\n        emailError: ''\r\n    }\r\n\r\n    handleChange = event => {\r\n        const { value, name } = event.target;\r\n        this.setState({ [name]: value});\r\n    };\r\n\r\n    handleSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        try {\r\n            this.setState({\r\n                ...this.state, \r\n                loading: true,\r\n                emailError: '',\r\n                passwordError: ''\r\n            })\r\n            await auth.signInWithEmailAndPassword(this.state.email, this.state.password);\r\n            this.setState({\r\n                ...this.state, \r\n                loading: false,\r\n                email: '',\r\n                password: ''\r\n            });\r\n        } catch (error) {\r\n            this.setState({...this.state, loading: false});\r\n            if (error.code === 'auth/user-not-found'){\r\n                this.setState({...this.state, emailError: 'User Not Found'});  \r\n            } \r\n            else if (error.code === 'auth/wrong-password'){\r\n                this.setState({...this.state, passwordError: 'Incorrect Password'});  \r\n            } else if (error.code === 'auth/network-request-failed'){\r\n                swal({\r\n                    title: \"Network Error!\",\r\n                    text: \"Check your network connection and try again\",\r\n                    icon: \"warning\",\r\n                    button: \"ok\",\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    handleGoogleAuth = () => {\r\n        auth.signInWithPopup(googleProvider);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this._isMounted = false;\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"auth\">\r\n                <div className=\"auth__container\">\r\n                    <h3 className=\"auth--heading\">Log in to your account</h3>\r\n                    <form className=\"auth__form\" onSubmit={this.handleSubmit}>\r\n                        <div className=\"auth__formGroup\">\r\n                            <AiOutlineMail className=\"auth__formGroup--icon\"/>\r\n                            <input className=\"auth__form-input\" type=\"email\" name=\"email\" id=\"email\" placeholder=\"Email\" required\r\n                                value={this.state.email}\r\n                                onChange={this.handleChange}\r\n                            />                            \r\n                        </div>\r\n                        <p className=\"auth__error-msg\">{this.state.emailError}</p>\r\n                        <div className=\"auth__formGroup\">\r\n                            <RiLockPasswordLine className=\"auth__formGroup--icon\"/>\r\n                            <input className=\"auth__form-input\" type=\"password\" name=\"password\" id=\"password\" placeholder=\"Password\" required\r\n                                value={this.state.password}\r\n                                onChange={this.handleChange}\r\n                            />\r\n                        </div>\r\n                            <p className=\"auth__error-msg\">{this.state.passwordError}</p>\r\n                        <div className=\"auth__formGroup\">\r\n\r\n                            {\r\n                                this.state.loading ? \r\n                                    <button type=\"submit\" className=\"auth__submit-btn\">                                         \r\n                                        <span style={{marginRight:'1rem'}}>\r\n                                            Wait                                        \r\n                                        </span> \r\n                                        <Loader\r\n                                            style={{marginTop: '.5rem'}}\r\n                                            type=\"Oval\"\r\n                                            color=\"#ffffff\"\r\n                                            height={20}\r\n                                            width={20}\r\n                                            timeout={0}\r\n                                        />\r\n                                    </button>\r\n                                : \r\n                                    <button type=\"submit\" className=\"auth__submit-btn\"> \r\n                                    <IoIosLogIn className=\"auth__btn-icon\"/> \r\n                                    <span style={{marginRight:'1rem'}}>\r\n                                        Login                                        \r\n                                    </span> \r\n                                </button>\r\n                            }\r\n                        </div>\r\n                    </form>\r\n                    <div className=\"auth__formGroup\">\r\n                        <button className=\"auth__google-btn\"\r\n                            onClick={this.handleGoogleAuth}\r\n                        > \r\n                            <FcGoogle className=\"auth__btn-icon\"/> \r\n                            <span>Login with Google</span> \r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n};\r\n\r\nexport default AdminLogin;","import React from 'react';\r\n\r\n//icons\r\nimport { AiOutlineBank, AiOutlineLogout, AiOutlineSwitcher } from 'react-icons/ai';\r\n\r\n//redux\r\nimport { connect } from 'react-redux';\r\nimport { selectUserSlice } from '../../../Redux/user/user.selectors';\r\nimport { toggleSideBar } from '../../../Redux/stock/stock.actions';\r\nimport { toggleSideBarSlice } from '../../../Redux/stock/stock.selector';\r\nimport { AiOutlineClose } from 'react-icons/ai';\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\n//firebase\r\nimport { auth } from '../../../firebase/firebase.utils';\r\n\r\n\r\n\r\n\r\nclass AdminNav extends React.Component {\r\n\r\n    render() {\r\n        const { currentUser, sidebarHidden, SideBar } = this.props;\r\n        return(\r\n            <div className=\"admin-nav\">\r\n                <h1 className=\"admin-nav__logo\">Oville Gadgets</h1>\r\n                {/* <NavSearch/> */}\r\n                <ul className=\"admin-nav__links\" style={{marginLeft: 'auto'}}>\r\n                    {\r\n                        currentUser ? \r\n                            <Link to=\"/\" className=\"admin-nav__links--item\" style={{color: 'white', textDecoration: 'none', display: 'flex', alignItems: 'center'}}> \r\n                                <AiOutlineBank className=\"admin-nav__links--icon\"/> Home\r\n                            </Link>\r\n                        : ''\r\n                    }\r\n                    \r\n                    <li className=\"admin-nav__links--item\"> \r\n                        <AiOutlineSwitcher className=\"admin-nav__links--icon\"/> \r\n                        <a href=\"https://github.com\" target=\"_blank\" rel=\"noopener noreferrer\"  style={{color: 'white', textDecoration: 'none'}}>App</a>\r\n                    </li>\r\n                    {\r\n                        currentUser ? \r\n                            <li className=\"admin-nav__links--item\" onClick={() => auth.signOut()}> \r\n                                <AiOutlineLogout className=\"admin-nav__links--icon\"/> Sign Out\r\n                            </li>\r\n                        : ''\r\n                    }\r\n                    {\r\n                        currentUser ? \r\n                            <div>\r\n                                {\r\n                                    sidebarHidden ? \r\n                                        <li className=\"admin-nav__btn\" onClick={SideBar}>\r\n                                            <div className=\"admin-nav__hamburger\"></div>\r\n                                            <div className=\"admin-nav__hamburger\"></div>\r\n                                            <div className=\"admin-nav__hamburger\"></div>\r\n                                        </li>\r\n                                    : <AiOutlineClose onClick={SideBar} style={{fontSize: '2.5rem', marginTop: '1rem', cursor: 'pointer'}}/>\r\n                                }\r\n\r\n                            </div>\r\n                        : ''\r\n                    }\r\n                    \r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    currentUser: selectUserSlice(state),\r\n    sidebarHidden: toggleSideBarSlice(state)\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    SideBar: () => dispatch(toggleSideBar())\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AdminNav);\r\n","import React from 'react';\r\n\r\nimport AdminLogin from '../Admin-login/AdminLogin.component';\r\nimport AdminNav from './../Admin-Nav/Admin-Nav.component';\r\n\r\n\r\nconst AdminSignUpPage = () => (\r\n    <div className=\"admin-signin\">\r\n        <AdminNav/>\r\n        <AdminLogin/>\r\n    </div>\r\n);\r\n\r\nexport default AdminSignUpPage;","import React from 'react';\r\nimport Sidebar from './../Sidebar/sidebar.component';\r\n\r\n\r\nimport Stock from '../Stock-tab/Stock.component';\r\nimport CategoryList from '../Category-List/CategoryList.component';\r\nimport EditItem from './../Edit-Item/EditItem.component';\r\nimport CreateAdmin from './../Create-Admin/CreateAdmin.component';\r\nimport CreateCategory from './../Create-Category/CreateCategory.component';\r\nimport AddItem from '../Add-Item/AddItem.component';\r\nimport ItemPage from '../Item-Page/ItemPage.component';\r\nimport AdminSignUpPage from '../admin-signIn-page/AdminSignInPage.component';\r\n\r\n\r\n\r\n//React Router\r\nimport { Route, Switch, BrowserRouter as Router } from 'react-router-dom';\r\n\r\n//Redux\r\nimport { connect } from 'react-redux';\r\n\r\n//Redux Selectors\r\nimport { selectUserSlice } from './../../../Redux/user/user.selectors';\r\nimport AdminNav from './../Admin-Nav/Admin-Nav.component';\r\n\r\n\r\n\r\n\r\nconst AdminDashboard = ({currentUser}) => {    \r\n    return(\r\n        \r\n        //render page if user is logged in else render the sign in page\r\n        \r\n        currentUser ? \r\n        <Router>    \r\n            <AdminNav/>\r\n            <div className=\"admin-dashboard\">\r\n                <Sidebar/>\r\n                <div className=\"dashboard-container\">\r\n                    <Switch>\r\n                        <Route exact path=\"/\" render={()=> {return <div>\r\n                            <Stock/>\r\n                            <CategoryList/>\r\n                        </div>}}/>       \r\n                        <Route exact path=\"/add\" component = {AddItem}/>       \r\n                        <Route exact path=\"/Create-admin\" component = {CreateAdmin}/>       \r\n                        <Route exact path=\"/create-category\" component = {CreateCategory}/>       \r\n                        <Route exact path=\"/edit/:id\" component = {EditItem}/>       \r\n                        <Route exact path=\"/product/:id\" component ={ItemPage} />\r\n                    </Switch>\r\n                </div>\r\n            </div>\r\n        </Router>\r\n        : \r\n        <AdminSignUpPage/>\r\n    )\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    currentUser: selectUserSlice(state)\r\n});\r\n\r\nexport default connect(mapStateToProps)(AdminDashboard);","export const userActionTypes = {\r\n    SET_CURRENT_USER: 'SET_CURRENT_USER'\r\n}","import React from 'react';\r\n\r\nimport AdminDashboard from './../Admin-Dashboard/AdminDashboard.component';\r\n\r\n//Redux\r\nimport { setUser } from './../../../Redux/user/user.actions';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\n//firebase\r\nimport { auth } from '../../../firebase/firebase.utils';\r\n\r\nclass AdminHome extends React.Component {\r\n\r\n    componentDidMount(){\r\n        auth.onAuthStateChanged(user => {\r\n            this.props.setUser(user);\r\n        })\r\n    };\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"admin-container\">\r\n                <AdminDashboard/>\r\n            </div>            \r\n        )\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    setUser: user => dispatch(setUser(user))\r\n});\r\n\r\n\r\n// const mapStateTO\r\nexport default connect(null, mapDispatchToProps)(AdminHome);","import { userActionTypes } from './user.types';\r\n\r\nexport const setUser = user => ({\r\n    type: userActionTypes.SET_CURRENT_USER,\r\n    payload: user\r\n});","import React from 'react';\nimport './App.scss';\n\nimport AdminHome from './components/admin/Admin-home/AdminHome.component';\n\n//css\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\n\n\n\nfunction App() {\n  return (\n    <main className=\"App\">\n      <AdminHome/>\n    </main>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { userActionTypes } from './user.types';\r\n\r\nconst INIT_STATE = {\r\n    currentUser: null\r\n}\r\n\r\nconst userReducer = (state = INIT_STATE, action) => {\r\n    switch (action.type) {\r\n        case userActionTypes.SET_CURRENT_USER:\r\n            return {\r\n                ...state,\r\n                currentUser: action.payload\r\n            }\r\n        default: \r\n            return state;\r\n    }\r\n};\r\n\r\nexport default userReducer;","import { categoryActionTypes } from './category.types';\r\n\r\nconst INIT_STATE= {\r\n    isCreating: false,\r\n    errorMsg: null,\r\n    isGettingCategory: false,\r\n    getCategoryErrorMsg: '',\r\n    categories: null\r\n}\r\n\r\nconst categoryReducer = (state = INIT_STATE, action) => {\r\n    switch (action.type) {\r\n        case categoryActionTypes.ADD_CATEGORY_START:\r\n            return {\r\n                ...state,\r\n                isCreating: true\r\n            }\r\n        case categoryActionTypes.ADD_CATEGORY_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isCreating: false\r\n            }\r\n        case categoryActionTypes.ADD_CATEGORY_FAILURE:\r\n            return {\r\n                ...state,\r\n                isCreating: false,\r\n                errorMsg: action.payload\r\n            }\r\n        case categoryActionTypes.GET_CATEGORY_START:\r\n            return {\r\n                ...state,\r\n                isGettingCategory: true\r\n            }\r\n        case categoryActionTypes.GET_CATEGORY_SUCCESS:\r\n            return {\r\n                ...state,\r\n                categories: action.payload,\r\n                isGettingCategory: false\r\n            }\r\n        case categoryActionTypes.GET_CATEGORY_FAILURE:\r\n            return {\r\n                ...state, \r\n                isGettingCategory: false,\r\n                getCategoryErrorMsg: action.payload\r\n            }\r\n        default: \r\n            return state;\r\n    }\r\n}\r\n\r\nexport default categoryReducer;","import { newItemActionTypes } from './new-item.types';\r\n\r\nconst INIT_STATE = {\r\n    isAdding: false,\r\n    addingErrorMsg: '',\r\n    isUpdating: false,\r\n    updateErrorMsg: '',\r\n    clearForm: false\r\n}\r\n\r\nconst addNewItemReducer = (state=INIT_STATE, action) => {\r\n    switch(action.type) {\r\n        case newItemActionTypes.ADD_NEW_ITEM_START:\r\n            return {\r\n                ...state,\r\n                isAdding: true\r\n            }\r\n        case newItemActionTypes.ADD_NEW_ITEM_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isAdding: false\r\n            }\r\n        case newItemActionTypes.ADD_NEW_ITEM_FAILURE:\r\n            return {\r\n                ...state,\r\n                isAdding: false,\r\n                addingErrorMsg: action.payload\r\n            }\r\n        case newItemActionTypes.UPDATE_ITEM_START:\r\n            return {\r\n                ...state,\r\n                isUpdating: true\r\n            }\r\n        case newItemActionTypes.UPDATE_ITEM_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isUpdating: false,\r\n                clearForm: true\r\n            }\r\n        case newItemActionTypes.UPDATE_ITEM_FAILURE:\r\n            return {\r\n                ...state,\r\n                updateErrorMsg: action.payload\r\n            }\r\n        default: \r\n            return state\r\n    }\r\n}\r\n\r\nexport default addNewItemReducer;","import { stockActionTypes } from './stock.types';\r\n\r\nconst INIT_STATE = {\r\n    stock: null,\r\n    isGettingStock: false,\r\n    getStockErrorMsg: '',\r\n    burgerIsHidden: true\r\n}\r\n\r\nexport const stockReducer = (state=INIT_STATE, action) => {\r\n    switch (action.type) {\r\n        case stockActionTypes.GET_STOCK_START:\r\n            return {\r\n                ...state,\r\n                isGettingStock: true\r\n            }\r\n        case stockActionTypes.GET_STOCK_SUCCESS: \r\n            return {\r\n                ...state,\r\n                isGettingStock: false,\r\n                stock: action.payload\r\n            }\r\n        case stockActionTypes.GET_STOCK_FAILURE:\r\n            return {\r\n                ...state,\r\n                isGettingStock: false,\r\n                getStockErrorMsg: action.payload\r\n            }\r\n        case stockActionTypes.TOGGLE_HIDDEN:\r\n            return {\r\n                ...state,\r\n                burgerIsHidden: !state.burgerIsHidden\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { productActionTypes } from './products.types';\r\n\r\nconst INIT_STATE = {\r\n    isGettingProducts: false,\r\n    productCategory: '',\r\n    products: null,\r\n    getProductsErrorMsg: ''\r\n}\r\n\r\nconst productsReducer = (state = INIT_STATE, action) => {\r\n    switch (action.type) {\r\n        case productActionTypes.GET_PRODUCT_START:\r\n            return {\r\n                ...state,\r\n                isGettingProducts: true,\r\n                productCategory: action.payload\r\n            }\r\n        case productActionTypes.GET_PRODUCT_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isGettingProducts: false,\r\n                products: action.payload\r\n            }\r\n        case productActionTypes.GET_PRODUCT_FAILURE:\r\n            return {\r\n                ...state,\r\n                isGettingProducts: false,\r\n                getProductsErrorMsg: action.payload\r\n            }\r\n        default: \r\n            return state;\r\n    }\r\n}\r\n\r\nexport default productsReducer;\r\n","import { combineReducers } from 'redux';\r\nimport { persistReducer } from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\n\r\nimport userReducer from './user/user.reducer';\r\nimport categoryReducer from './Category/category.reducer';\r\nimport addNewItemReducer from './newItem/new-item.reducer';\r\nimport { stockReducer } from './stock/stock.reducer';\r\nimport productsReducer from './products-page/products.reducer';\r\n\r\n\r\n\r\n\r\n\r\nconst persistConfig = {\r\n    key: 'root',\r\n    storage,\r\n    whitelist: ['category', 'newItem', 'stock', 'products'] \r\n}\r\n\r\nconst rootReducer = combineReducers({\r\n    user: userReducer,\r\n    category: categoryReducer,\r\n    newItem: addNewItemReducer,\r\n    stock: stockReducer,\r\n    products: productsReducer\r\n});\r\n\r\nexport default persistReducer(persistConfig, rootReducer);","import { createStore, applyMiddleware } from 'redux';\r\nimport { persistStore } from 'redux-persist';\r\nimport logger from 'redux-logger';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport rootReducer from './root-reducer';\r\n\r\nconst middlewares = [logger, thunk];\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(...middlewares));\r\nexport const persistor = persistStore(store);\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { store, persistor } from './Redux/store';\n\n//React Router\nimport { BrowserRouter } from 'react-router-dom';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <BrowserRouter>\n        <PersistGate persistor={persistor}>\n          <App />\n        </PersistGate>      \n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}